{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":4838067,"sourceType":"datasetVersion","datasetId":2803722}],"dockerImageVersionId":30732,"isInternetEnabled":true,"language":"python","sourceType":"script","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# %% [code]\n# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-06-25T13:13:55.875587Z\",\"iopub.execute_input\":\"2024-06-25T13:13:55.876016Z\",\"iopub.status.idle\":\"2024-06-25T13:13:57.024627Z\",\"shell.execute_reply.started\":\"2024-06-25T13:13:55.875980Z\",\"shell.execute_reply\":\"2024-06-25T13:13:57.023123Z\"}}\n!rm -rf \n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-06-25T13:13:59.974200Z\",\"iopub.execute_input\":\"2024-06-25T13:13:59.974608Z\",\"iopub.status.idle\":\"2024-06-25T13:14:14.217063Z\",\"shell.execute_reply.started\":\"2024-06-25T13:13:59.974573Z\",\"shell.execute_reply\":\"2024-06-25T13:14:14.215733Z\"}}\n!pip install ultralytics\n\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-06-25T13:14:17.795608Z\",\"iopub.execute_input\":\"2024-06-25T13:14:17.795932Z\",\"iopub.status.idle\":\"2024-06-25T13:14:17.804810Z\",\"shell.execute_reply.started\":\"2024-06-25T13:14:17.795899Z\",\"shell.execute_reply\":\"2024-06-25T13:14:17.803871Z\"}}\nimport os\nimport cv2\nimport numpy as np\nimport pandas as pd\nfrom tqdm import tqdm\nfrom shutil import copyfile\nimport matplotlib.pyplot as plt\nfrom PIL import Image\nimport yaml\nfrom ultralytics import YOLO\n\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-06-25T13:14:35.692166Z\",\"iopub.execute_input\":\"2024-06-25T13:14:35.692564Z\",\"iopub.status.idle\":\"2024-06-25T13:14:35.742686Z\",\"shell.execute_reply.started\":\"2024-06-25T13:14:35.692533Z\",\"shell.execute_reply\":\"2024-06-25T13:14:35.741654Z\"}}\nipaths = []\ntpaths = []\nfor dirname, _, filenames in os.walk('/kaggle/input/footballyolov8'):\n    for filename in filenames:\n        if filename.endswith('.jpg'):\n            ipaths.append(os.path.join(dirname, filename))\n        elif filename.endswith('.txt'):\n            tpaths.append(os.path.join(dirname, filename))\nipaths = sorted(ipaths)\ntpaths = sorted(tpaths)\nprint(ipaths[0])\nprint(len(ipaths))\n\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-06-25T13:15:09.201066Z\",\"iopub.execute_input\":\"2024-06-25T13:15:09.201475Z\",\"iopub.status.idle\":\"2024-06-25T13:15:09.435688Z\",\"shell.execute_reply.started\":\"2024-06-25T13:15:09.201444Z\",\"shell.execute_reply\":\"2024-06-25T13:15:09.434633Z\"}}\nboxdata = []\nboxfile = []\nfor file in tpaths:\n    data = np.loadtxt(file)\n    boxdata.append(data)\n    boxfile.append(os.path.splitext(os.path.basename(file))[0])\nprint(boxdata[0])\n\n\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-06-25T13:18:34.152937Z\",\"iopub.execute_input\":\"2024-06-25T13:18:34.153329Z\",\"iopub.status.idle\":\"2024-06-25T13:18:34.228569Z\",\"shell.execute_reply.started\":\"2024-06-25T13:18:34.153302Z\",\"shell.execute_reply\":\"2024-06-25T13:18:34.227592Z\"}}\nBOX = pd.DataFrame()\nfor i, data in enumerate(boxdata):\n    add = pd.DataFrame(data if data.ndim > 1 else [data])\n    add[5] = boxfile[i]\n    BOX = pd.concat([BOX, add], ignore_index=True)\nBOX.columns = [0, 1, 2, 3, 4, 'file']\ndisplay(BOX)\n\n\n# %% [markdown]\n# \n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-06-25T13:18:43.163473Z\",\"iopub.execute_input\":\"2024-06-25T13:18:43.163900Z\",\"iopub.status.idle\":\"2024-06-25T13:18:43.191930Z\",\"shell.execute_reply.started\":\"2024-06-25T13:18:43.163842Z\",\"shell.execute_reply\":\"2024-06-25T13:18:43.190903Z\"}}\nclass_map = {0: 'player', 1: 'football'}\nBOX[0] = BOX[0].map(class_map)\ndisplay(BOX)\ndisplay(BOX[0].value_counts())\n\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-06-25T13:22:00.954766Z\",\"iopub.execute_input\":\"2024-06-25T13:22:00.955371Z\",\"iopub.status.idle\":\"2024-06-25T13:22:00.970412Z\",\"shell.execute_reply.started\":\"2024-06-25T13:22:00.955334Z\",\"shell.execute_reply\":\"2024-06-25T13:22:00.969252Z\"}}\ndef draw_box(n0):\n    ipath = ipaths[n0]\n    image = cv2.imread(ipath)\n    H, W = image.shape[:2]\n    file = os.path.splitext(os.path.basename(ipath))[0]\n    box = BOX[BOX['file'] == file].reset_index(drop=True)\n    for _, row in box.iterrows():\n        label, x, y, w, h = row[0], row[1], row[2], row[3], row[4]\n        x0, y0 = int((x - w / 2) * W), int((y - h / 2) * H)\n        x1, y1 = int((x + w / 2) * W), int((y + h / 2) * H)\n        color = (0, 255, 0) if label == 'player' else (0, 0, 255)\n        cv2.rectangle(image, (x0, y0), (x1, y1), color, 2)\n    return image\n\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-06-25T13:20:45.068021Z\",\"iopub.execute_input\":\"2024-06-25T13:20:45.069218Z\",\"iopub.status.idle\":\"2024-06-25T13:22:00.938938Z\",\"shell.execute_reply.started\":\"2024-06-25T13:20:45.069174Z\",\"shell.execute_reply\":\"2024-06-25T13:22:00.937298Z\"}}\nfrom matplotlib import animation, rc\nrc('animation', html='jshtml')\n\ndef create_animation(ims):\n    fig = plt.figure(figsize=(10, 6))\n    im = plt.imshow(cv2.cvtColor(ims[0], cv2.COLOR_BGR2RGB))\n    plt.close()\n\n    def animate_func(i):\n        im.set_array(cv2.cvtColor(ims[i], cv2.COLOR_BGR2RGB))\n        return [im]\n    return animation.FuncAnimation(fig, animate_func, frames=len(ims), interval=500)\n\nimages1 = [draw_box(i) for i in tqdm(range(len(ipaths)))]\ncreate_animation(images1)\n\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-06-25T13:22:54.105359Z\",\"iopub.execute_input\":\"2024-06-25T13:22:54.105812Z\",\"iopub.status.idle\":\"2024-06-25T13:22:54.365797Z\",\"shell.execute_reply.started\":\"2024-06-25T13:22:54.105778Z\",\"shell.execute_reply\":\"2024-06-25T13:22:54.364774Z\"}}\nos.makedirs('datasets/train', exist_ok=True)\nos.makedirs('datasets/valid', exist_ok=True)\nos.makedirs('datasets/test', exist_ok=True)\n\nfor i, ipath in enumerate(ipaths):\n    tpath = tpaths[i]\n    ifile, tfile = os.path.basename(ipath), os.path.basename(tpath)\n    if i % 3 == 0:\n        copyfile(ipath, f'datasets/train/{ifile}')\n        copyfile(tpath, f'datasets/train/{tfile}')\n    elif i % 3 == 1:\n        copyfile(ipath, f'datasets/valid/{ifile}')\n        copyfile(tpath, f'datasets/valid/{tfile}')\n    else:\n        copyfile(ipath, f'datasets/test/{ifile}')\n        copyfile(tpath, f'datasets/test/{tfile}')\n\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-06-25T13:23:40.222684Z\",\"iopub.execute_input\":\"2024-06-25T13:23:40.223758Z\",\"iopub.status.idle\":\"2024-06-25T13:23:41.259305Z\",\"shell.execute_reply.started\":\"2024-06-25T13:23:40.223721Z\",\"shell.execute_reply\":\"2024-06-25T13:23:41.257965Z\"}}\nfootball_yaml = dict(\n    train='datasets/train',\n    val='datasets/valid',\n    test='datasets/test',\n    nc=2,\n    names=['player', 'football']\n)\n\nwith open('football.yaml', 'w') as outfile:\n    yaml.dump(football_yaml, outfile, default_flow_style=True)\n\n%cat football.yaml\n\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-06-25T13:23:58.552377Z\",\"iopub.execute_input\":\"2024-06-25T13:23:58.553583Z\",\"iopub.status.idle\":\"2024-06-25T13:24:10.130391Z\",\"shell.execute_reply.started\":\"2024-06-25T13:23:58.553532Z\",\"shell.execute_reply\":\"2024-06-25T13:24:10.129171Z\"}}\nmodel = YOLO(\"yolov8n.pt\")\n!yolo task=detect mode=train model=yolov8n.pt data=football.yaml epochs=20 imgsz=640\n\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-06-25T13:29:09.387840Z\",\"iopub.execute_input\":\"2024-06-25T13:29:09.388263Z\",\"iopub.status.idle\":\"2024-06-25T13:29:09.418566Z\",\"shell.execute_reply.started\":\"2024-06-25T13:29:09.388232Z\",\"shell.execute_reply\":\"2024-06-25T13:29:09.416762Z\"}}\n","metadata":{"_uuid":"ea2318ba-2df4-4cbb-bf22-5132d97d3f6d","_cell_guid":"86d30048-a2e0-4d30-bfd4-1087f242b809","collapsed":false,"jupyter":{"outputs_hidden":false},"trusted":true},"execution_count":null,"outputs":[]}]}